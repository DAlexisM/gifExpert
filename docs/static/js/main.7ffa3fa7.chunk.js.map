{"version":3,"sources":["components/GifExpertAdd.js","helpers/getGifitem.js","components/GifItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["GifExpertAdd","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getGifts","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVU,SAACC,GACjBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAQ,OAAGP,GAAH,mBAAiBO,OACvCN,EAAc,MAMlB,SACE,uBACEO,KAAO,MACPC,MAAST,EACTU,SAlBiB,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAQ,uCAAG,WAAOL,GAAP,uBAAAM,EAAA,6DAEdC,EAFc,iDAEkCC,UAAUR,GAF5C,+DAGDS,MAAMF,GAHL,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAcbM,GAda,4CAAH,sDCERO,EAAU,SAAC,GAAiB,IAAhBb,EAAe,EAAfA,IAAIU,EAAW,EAAXA,MACzB,OACI,sBAAKI,UAAU,2CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,QCFJO,EAAU,SAAC,GAAgB,IAAfxB,EAAc,EAAdA,SAErB,ECHwB,SAAEA,GAC1B,MAA0BR,mBAAS,CAC/BoB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNvB,EAAUL,GACT6B,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAACzB,IAEG0B,EDbwBK,CAAa/B,GAAhCkB,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACA,oBAAIJ,UAAU,sCAAd,SAAqDrB,IACpDyB,GAAW,mBAAGJ,UAAU,qCAAb,sBAEZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAA0BA,GAAZA,EAAIC,aEQvBgB,EApBM,WAEjB,MAAoCxC,mBAAS,CAAC,gBAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAEA,OACI,qCACI,4CACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBACA,6BAEQ0C,EAAWnB,KAAI,SAAAd,GACX,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCX7CkC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.7ffa3fa7.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropType from 'prop-types';\r\n\r\nexport const GifExpertAdd = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleinputChange =(e)=>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategories(category=>[inputValue,...category]);\r\n            setinputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type = \"Tex\"\r\n            value = {inputValue}\r\n            onChange={ handleinputChange }\r\n          />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nGifExpertAdd.propTypes = {\r\n    setCategories: PropType.func.isRequired\r\n}","export const getGifts = async( category )=>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=GvKSLPTDgIY2Q0jp5DXgQr5cEUhOnwW5`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifItem = ({url,title}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUp\">\r\n            <img src={url} alt={title}/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifItem } from './GifItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeInUp\">{category}</h3>\r\n        {loading && <p className=\"animate__animated animate__fadeOut\">Cargando</p>}\r\n\r\n        <div className=\"card-grid\">\r\n              {\r\n                images.map(img=>(\r\n                    <GifItem key={img.id} {...img} />\r\n                ))\r\n              }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifts } from '../helpers/getGifitem';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n    \r\n    useEffect(() => {\r\n        getGifts( category )\r\n        .then( imgs =>{\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React ,{useState} from 'react'\r\nimport { GifExpertAdd } from './components/GifExpertAdd';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = ()=>{\r\n\r\n    const [categories, setCategories] = useState(['Dragon ball'])\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert</h2>\r\n            <GifExpertAdd setCategories={setCategories}  />\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map(category=>{\r\n                        return <GifGrid key={category} category={category} />\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}